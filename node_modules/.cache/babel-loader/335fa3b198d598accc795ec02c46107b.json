{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\reactfoodorder\\\\food-order-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  let sum = 0;\n\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    state.cartItems.map(item => {\n      if (item.foodName == action.val.itemName) {\n        item.amount = +item.amount + +action.val.amount;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      const newArray = [action.val, ...state.cartItems];\n      newArray.map(item => {\n        sum = sum + item.price;\n      });\n      return {\n        cartItems: newArray,\n        cartTotalPrice: sum\n      };\n    } else {\n      const newArray = [...state.cartItems];\n      newArray.map(item => {\n        sum = sum + item.price;\n      });\n      return {\n        cartItems: newArray,\n        cartTotalPrice: sum\n      };\n    }\n  }\n};\n\nfunction App() {\n  _s();\n\n  const cartContext = useContext(CartContext);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n  const initialState = {\n    cartItems: [],\n    cartTotalPrice: 0\n  };\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      key: Math.random(),\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount\n    };\n    let isNewItem = true;\n    cartDispatch({\n      type: \"NEW_ITEM_ADDED\",\n      val: newItems\n    });\n  };\n\n  useEffect(() => {\n    console.log(cartItems);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: {\n        addCartItems: addCartItems,\n        cartItems: cartItems\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: \"sans-serif\",\n          backgroundColor: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntroText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ta/G0/rBcBS3J5BQQxOuPwUBdzI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/reactfoodorder/food-order-project/src/App.js"],"names":["Navigation","Card","React","useEffect","useReducer","IntroText","Menu","CartContext","Cart","useState","useContext","cartReducer","state","action","sum","type","found","cartItems","map","item","foodName","val","itemName","amount","newArray","price","cartTotalPrice","App","cartContext","setCartItems","setCartTotalPrice","initialState","cartState","cartDispatch","addCartItems","itemPrice","itemAmount","newItems","key","Math","random","isNewItem","console","log","fontFamily","backgroundColor"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\n\nconst cartReducer = (state, action) => {\n\n  let sum = 0;\n\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    state.cartItems.map((item) => {\n      if (item.foodName == action.val.itemName) {\n        item.amount = +item.amount + +action.val.amount;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      const newArray = [action.val, ...state.cartItems]\n      newArray.map((item) => { sum = sum + item.price})\n      return {cartItems: newArray, cartTotalPrice: sum};\n    } else {\n      const newArray = [...state.cartItems]\n      newArray.map((item) => { sum = sum + item.price})\n      return {cartItems: newArray, cartTotalPrice: sum};\n    }\n  }\n};\n\nfunction App() {\n  const cartContext = useContext(CartContext);\n\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n\n  const initialState = { cartItems: [], cartTotalPrice: 0 };\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      key: Math.random(),\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount,\n    };\n    let isNewItem = true;\n    cartDispatch({ type: \"NEW_ITEM_ADDED\", val: newItems });\n  };\n\n  useEffect(() => {\n    console.log(cartItems);\n  });\n\n  return (\n    <React.Fragment>\n      <CartContext.Provider\n        value={{ addCartItems: addCartItems, cartItems: cartItems }}\n      >\n        <div style={{ fontFamily: \"sans-serif\", backgroundColor: \"black\" }}>\n          <Navigation />\n          <IntroText />\n          <Menu />\n        </div>\n      </CartContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}