{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\reactfoodorder\\\\food-order-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    const mutatable = state.cartItems.slice();\n    var sum = 0;\n    const isFound = false;\n    var newItem;\n    const myArray = mutatable.map(item => {\n      if (item.foodName == action.val.foodName) {\n        newItem = {\n          foodName: item.foodName,\n          price: item.price,\n          amount: item.amount + action.val.amount\n        };\n        isFound = true;\n        return newItem;\n      } else {\n        return item;\n      }\n    });\n\n    if (!isFound) {\n      myArray.push(action.val);\n    }\n\n    console.log(myArray);\n\n    for (let i = 0; i < myArray.length; i++) {\n      sum += myArray[i].price * myArray[i].amount;\n    }\n\n    return {\n      cartItems: myArray,\n      cartTotalPrice: sum\n    };\n  }\n\n  if (action.type === \"ITEM_REMOVED\") {\n    const filteredItems = state.cartItems.filter(item => item.foodName != action.val);\n  }\n};\n\nfunction App() {\n  _s();\n\n  const cartContext = useContext(CartContext);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n  const initialState = {\n    cartItems: [],\n    cartTotalPrice: 0\n  };\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount\n    };\n    let isNewItem = true;\n    cartDispatch({\n      type: \"NEW_ITEM_ADDED\",\n      val: newItems\n    });\n  };\n\n  const removeItem = itemName => {\n    cartDispatch({\n      type: \"ITEM_REMOVED\",\n      val: itemName\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"render\");\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: {\n        addCartItems: addCartItems,\n        removeItem,\n        cartState: cartState\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: \"sans-serif\",\n          backgroundColor: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntroText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ta/G0/rBcBS3J5BQQxOuPwUBdzI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/reactfoodorder/food-order-project/src/App.js"],"names":["Navigation","Card","React","useEffect","useReducer","IntroText","Menu","CartContext","Cart","useState","useContext","cartReducer","state","action","type","found","mutatable","cartItems","slice","sum","isFound","newItem","myArray","map","item","foodName","val","price","amount","push","console","log","i","length","cartTotalPrice","filteredItems","filter","App","cartContext","setCartItems","setCartTotalPrice","initialState","cartState","cartDispatch","addCartItems","itemName","itemPrice","itemAmount","newItems","isNewItem","removeItem","fontFamily","backgroundColor"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\n\nconst cartReducer = (state, action) => {\n\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    const mutatable = state.cartItems.slice();\n    var sum=0;\n\n    const isFound=false;\n    var newItem;\n    \n    const myArray = mutatable.map((item) => {\n      if (item.foodName == action.val.foodName) {\n        newItem = {foodName: item.foodName, price: item.price, amount: item.amount + action.val.amount}\n        isFound=true;\n        return newItem;\n      }\n      else{\n        return item;\n      }\n    });\n\n    if(!isFound){\n      myArray.push(action.val)\n    }\n\n    console.log(myArray);\n    for(let i=0; i<myArray.length; i++)\n    {\n      sum += myArray[i].price * myArray[i].amount;\n    }\n    return {cartItems: myArray, cartTotalPrice: sum};\n\n  }\n\n  if(action.type === \"ITEM_REMOVED\")\n  {\n\n    const filteredItems = state.cartItems.filter(item => item.foodName != action.val)\n\n  }\n};\n\nfunction App() {\n  const cartContext = useContext(CartContext);\n\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n\n  const initialState = { cartItems: [], cartTotalPrice: 0 };\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount,\n    };\n    let isNewItem = true;\n    cartDispatch({ type: \"NEW_ITEM_ADDED\", val: newItems });\n  };\n  \n  const removeItem = (itemName) => {\n    cartDispatch({type: \"ITEM_REMOVED\", val: itemName})\n  }\n\n  useEffect(() => {\n    console.log(\"render\");\n  });\n\n  return (\n    <React.Fragment>\n      <CartContext.Provider\n        value={{ addCartItems: addCartItems, removeItem, cartState: cartState}}\n      >\n        <div style={{ fontFamily: \"sans-serif\", backgroundColor: \"black\" }}>\n          <Navigation />\n          <IntroText />\n          <Menu />\n        </div>\n      </CartContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}