{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\reactfoodorder\\\\food-order-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    state.map(item => {\n      if (item.foodName == action.value.itemName) {\n        item.amount = +item.amount + +action.value.amount;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      return [action.value, ...state];\n    } else {\n      return [...state];\n    }\n  }\n};\n\nfunction App() {\n  _s();\n\n  const cartContext = useContext(CartContext);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n  const initialState = {\n    cartItems: [],\n    cartTotalPrice: 0\n  };\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      key: Math.random(),\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount\n    };\n    let isNewItem = true;\n    cartDispatch({\n      type: \"NEW_ITEM_ADDED\",\n      value: newItems\n    });\n  };\n\n  useEffect(() => {\n    console.log(cartItems);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: {\n        addCartItems: addCartItems,\n        cartItems: cartItems\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: \"sans-serif\",\n          backgroundColor: \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntroText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ta/G0/rBcBS3J5BQQxOuPwUBdzI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/reactfoodorder/food-order-project/src/App.js"],"names":["Navigation","Card","React","useEffect","useReducer","IntroText","Menu","CartContext","Cart","useState","useContext","cartReducer","state","action","type","found","map","item","foodName","value","itemName","amount","App","cartContext","cartItems","setCartItems","cartTotalPrice","setCartTotalPrice","initialState","cartState","cartDispatch","addCartItems","itemPrice","itemAmount","newItems","key","Math","random","price","isNewItem","console","log","fontFamily","backgroundColor"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useEffect, useReducer } from \"react\";\nimport IntroText from \"./components/IntroText\";\nimport Menu from \"./components/Menu\";\nimport CartContext from \"./components/cart-context\";\nimport Cart from \"./components/CartButton\";\nimport { useState, useContext } from \"react\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"NEW_ITEM_ADDED\") {\n    let found = false;\n    state.map((item) => {\n      if (item.foodName == action.value.itemName) {\n        item.amount = +item.amount + +action.value.amount;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      return [action.value, ...state];\n    } else {\n      return [...state];\n    }\n  }\n};\n\nfunction App() {\n  const cartContext = useContext(CartContext);\n\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotalPrice, setCartTotalPrice] = useState(0);\n\n  const initialState = { cartItems: [], cartTotalPrice: 0 };\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, initialState);\n\n  const addCartItems = (itemName, itemPrice, itemAmount) => {\n    const newItems = {\n      key: Math.random(),\n      foodName: itemName,\n      price: itemPrice,\n      amount: itemAmount,\n    };\n    let isNewItem = true;\n    cartDispatch({ type: \"NEW_ITEM_ADDED\", value: newItems });\n  };\n\n  useEffect(() => {\n    console.log(cartItems);\n  });\n\n  return (\n    <React.Fragment>\n      <CartContext.Provider\n        value={{ addCartItems: addCartItems, cartItems: cartItems }}\n      >\n        <div style={{ fontFamily: \"sans-serif\", backgroundColor: \"black\" }}>\n          <Navigation />\n          <IntroText />\n          <Menu />\n        </div>\n      </CartContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}